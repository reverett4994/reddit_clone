<%karma=(post.get_upvotes.size)-(post.get_downvotes.size)%>

  <div class="post_container">
    <div class="listing_counter  <%='disabled_wrapper' unless user_signed_in?%>">
      <p class="counter"><%=counter%></p>
      <% if user_signed_in?%>
        <div class="vote_btn">
        <%= link_to "#", class: "btn btn-default upvote #{'voted' if current_user.voted_up_on? post} #{'disabled' unless user_signed_in?}",id:post.id do %>
            <i class="glyphicon glyphicon-arrow-up"></i>
        <% end %><br><p class="karma" id=<%=post.id%>><%=karma%></p><br>
        <%= link_to "#", class: "btn btn-default downvote #{'voted' if current_user.voted_down_on? post} #{'disabled' unless user_signed_in?}",id:post.id do %>
            <i class="glyphicon glyphicon-arrow-down"></i>
        <% end %>
      </div>
      <%else%>
        <%= link_to "#", class: "btn btn-default upvote #{'disabled' unless user_signed_in?}",id:post.id do %>
            <i class="glyphicon glyphicon-arrow-up"></i>
        <% end %><br><p class="karma" id=<%=post.id%>><%=karma%></p><br>
        <%= link_to "#", class: "btn btn-default downvote #{'disabled' unless user_signed_in?}",id:post.id do %>
            <i class="glyphicon glyphicon-arrow-down"></i>
        <% end %>
      <%end%>

    </div>
      <div class="listing">

        <!-- Left-aligned media object -->
        <div class="media">
          <div class="media-left">
            <%if post.class==Post%>
              <%if post.image_link.present?%>
                <div class="post_placeholder">
                  <%=link_to image_tag(post.image_link,alt:"",:id=>"listing_pic",:class=>"media-object"), post.image_link%>
                </div>
              <%else%>
                <%=image_tag("logo.png",alt:"logo.png",:id=>"listing_pic",:class=>"media-object")%>
              <%end%>
            <%end%>
          </div>
          <div class="media-body">
            <h4 class="media-heading"><%= link_to post.title, post %></h4>
            <% time_diffrence=TimeDifference.between(post.created_at, Time.current).in_general %>
            <% if TimeDifference.between(post.created_at,  Time.current).in_seconds<60 %>
                <% time_diffrence=TimeDifference.between(post.created_at, Time.current).in_seconds %>
                <p id='post_time'>Created About <%=time_diffrence.to_i%> seconds ago by
                                    <%= link_to post.user.username,user_show_path(username: post.user.username) unless post.user==nil%><%= if post.user==nil then "DELETED" end%>
                                    to /r/<%= link_to post.subreddit.name, post.subreddit %></p>

            <% elsif TimeDifference.between(post.created_at,  Time.current).in_minutes<60 %>
                <% time_diffrence=TimeDifference.between(post.created_at, Time.current).in_minutes %>
                 <p id='post_time'>Created About <%=time_diffrence.to_i%> minutes ago by
                                    <%= link_to post.user.username,user_show_path(username: post.user.username) unless post.user==nil%><%= if post.user==nil then "DELETED" end%>
                                    to /r/<%= link_to post.subreddit.name, post.subreddit %></p>

            <% elsif TimeDifference.between(post.created_at,  Time.current).in_hours<24 %>
                <% time_diffrence=TimeDifference.between(post.created_at, Time.current).in_hours %>
                 <p id='post_time'>Created About <%=time_diffrence.to_i%> hours ago by
                                    <%= link_to post.user.username,user_show_path(username: post.user.username) unless post.user==nil%><%= if post.user==nil then "DELETED" end%>
                                    to /r/<%= link_to post.subreddit.name, post.subreddit %></p>

            <% elsif TimeDifference.between(post.created_at,  Time.current).in_days<30 %>
                <% time_diffrence=TimeDifference.between(post.created_at, Time.current).in_days %>
                 <p id='post_time'>Created About <%=time_diffrence.to_i%> days ago by
                                    <%= link_to post.user.username,user_show_path(username: post.user.username) unless post.user==nil%><%= if post.user==nil then "DELETED" end%>
                                    to /r/<%= link_to post.subreddit.name, post.subreddit %></p>

            <% elsif TimeDifference.between(post.created_at,  Time.current).in_months<12 %>
                <% time_diffrence=TimeDifference.between(post.created_at, Time.current).in_months %>
                 <p id='post_time'>Created About <%=time_diffrence.to_i%> months ago by
                                    <%= link_to post.user.username,user_show_path(username: post.user.username) unless post.user==nil%><%= if post.user==nil then "DELETED" end%>
                                    to /r/<%= link_to post.subreddit.name, post.subreddit %></p>

            <% elsif TimeDifference.between(post.created_at,  Time.current).in_months<12 %>
                <% time_diffrence=TimeDifference.between(post.created_at, Time.current).in_years%>
                 <p id='post_time'>Created About <%=time_diffrence.to_i%> years ago by
                                    <%= link_to post.user.username,user_show_path(username: post.user.username) unless post.user==nil%><%= if post.user==nil then "DELETED" end%>
                                    to /r/<%= link_to post.subreddit.name, post.subreddit %></p>
            <%end%>
            <% if @post.description != ""%>
              <div class="panel panel-default">
                <div class="panel-body"><p><%=@post.description%></p></div>
              </div>
            <%end%>

            <% if post.user != nil && post.user==current_user%>
            <%= link_to 'Delete', post, method: :delete, data: { behavior: 'delete' } %>
            <%end%>
            <%if user_signed_in?%>
              <% if current_user.admin.subreddits.include? (post.subreddit)%>
                <%= link_to 'Mod Delete', post, method: :delete, data: { behavior: 'mod_delete',title:post.title,subreddit:post.subreddit.name,user: (post.user.email unless post.user==nil) } %>
              <%end%>
            <%end%>
          </div>
        </div>
      </div><br><br>
  </div>







  <script>

  $('.upvote').click(function(e) {
    console.log("CLICKED");
    var post= $(this).attr("id")
    $(this ).addClass( "voted" );
    $("#"+post+".downvote").removeClass("voted");
    $.ajax({
      type: "POST",
      url: "/post/vote",
      dataType:"json",
      data: {vote:"up",id:post },
      success:function(data) {
        $("#"+post+".karma").text(data);
        return false;
      },
      error:function(data) {
        $("#"+post+".karma").text(data);
        return false;
      }
    });
  });


  $('.downvote').click(function(e) {
    console.log("CLICKED");
    var post= $(this).attr("id")
    $(this ).addClass( "voted" );
    $("#"+post+".upvote").removeClass("voted");
    $.ajax({
      type: "POST",
      url: "/post/vote",
      dataType:"json",
      data: {vote:"down",id:post },
      success:function(data) {
        $("#"+post+".karma").text(data);
        return false;
      },
      error:function(data) {
        $("#"+post+".karma").text(data);
        return false;
      }
    });
  });

  $('.disabled_wrapper').click(function() {
    sweetAlert("Opps!", "You Need To Sign In to Vote", "error");
  });

  $("[data-behavior='delete']").on("click", function(e) {
    e.preventDefault();
    e.stopPropagation();
    console.log(this);
    var link=this;
    return swal({
      title: 'Are you sure?',
      text: 'You will not be able to recover this post!',
      type: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#DD6B55',
      confirmButtonText: 'Yes, delete it!',
      cancelButtonText: 'No, cancel!',
      closeOnConfirm: false,
      closeOnCancel: false
    }, (function(_this) {
      return function(confirmed) {
        if (confirmed) {
          $.ajax({
            url: $(_this).attr("href"),
            dataType: "JSON",
            method: "DELETE",
            success: function() {
              console.log(link);
              $(link).parents(".post_container").fadeOut();
              return swal('Deleted!', 'Your post has been deleted.', 'success');
            }
          });
        } else {
          swal('Cancelled', 'Your post was unharmed', 'error');
        }
      };
    })(this));
  });

  $("[data-behavior='mod_delete']").on("click", function(e) {
    e.preventDefault();
    e.stopPropagation();
    var link=this;
    var email=$(this).data("user");
    var title=$(this).data("title");
    var subreddit=$(this).data("subreddit");
    return swal({
      title: 'Delete post using mod privileges?',
      text: 'You will not be able to recover this post!',
      type: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#DD6B55',
      confirmButtonText: 'Yes, delete it!',
      cancelButtonText: 'No, cancel!',
      closeOnConfirm: false,
      closeOnCancel: false
    }, (function(_this) {
      return function(confirmed) {
        if (confirmed) {

          swal({
            title: "Reason for deletion!",
            text: "What did it do wrong?:",
            type: "input",
            showCancelButton: true,
            closeOnConfirm: false,
            animation: "slide-from-top",
            inputPlaceholder: "Need Something"
          },
          function(inputValue){
            if (inputValue === false) return false;

            if (inputValue === "") {
              swal.showInputError("You need to write something!");
              return false
            }

            $.ajax({
              url: $(_this).attr("href"),
              dataType: "JSON",
              method: "DELETE",
              success: function() {
                $(link).parents(".post_container").fadeOut();
                $.ajax({
                  url:"/moddestroy",
                  dataType: "JSON",
                  method: "GET",
                  data: { reason: inputValue,user:email,post:title,sub:subreddit },
                  success: function() {

                  }
                });
                return swal('Deleted!', 'post has been deleted.', 'success');
              }
            });
          });



        } else {
          swal('Cancelled', 'Post was unharmed', 'error');
        }
      };
    })(this));

  });


  </script>
