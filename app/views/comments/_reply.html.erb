<% comments.each do |comment| %>
<%karma=(comment.get_upvotes.size)-(comment.get_downvotes.size)%>
  <div class="comments-show">
    <div class="comment_listing_counter  <%='disabled_wrapper' unless user_signed_in?%>">
      <p class="counter"></p>
      <% if user_signed_in?%>
        <div class="vote_btn">
        <%= link_to "#", class: "btn btn-default upvote comment_upvote #{'voted' if current_user.voted_up_on? comment} #{'disabled' unless user_signed_in?}",id:comment.id do %>
            <i class="glyphicon glyphicon-arrow-up"></i>
        <% end %><br>
        <%= link_to "#", class: "btn btn-default downvote comment_downvote #{'voted' if current_user.voted_down_on? comment} #{'disabled' unless user_signed_in?}",id:comment.id do %>
            <i class="glyphicon glyphicon-arrow-down"></i>
        <% end %>
      </div>
      <%else%>
        <%= link_to "#", class: "btn btn-default upvote comment_upvote #{'disabled' unless user_signed_in?}",id:comment.id do %>
            <i class="glyphicon glyphicon-arrow-up"></i>
        <% end %><br>
        <%= link_to "#", class: "btn btn-default downvote comment_downvote #{'disabled' unless user_signed_in?}",id:comment.id do %>
            <i class="glyphicon glyphicon-arrow-down"></i>
        <% end %>
      <%end%>

    </div>
    <div class="comment">
      <a href="/user/<%=comment.user.username%>"><%=comment.user.username%></a>
      <% if comment.user==Post.find(comment.commentable_id).user%>
        <p class="op"> &nbsp;OP&nbsp; </p>
      <%end%>
      <% if comment.user.admin.subreddits.include? (Post.find(comment.commentable_id).subreddit)%>
        <p class="mod"> &nbsp;M&nbsp; </p>
      <%end%>
      <p class="comment_karma" id=<%=comment.id%>><%=karma%> points</p>

      <% time_diffrence=TimeDifference.between(comment.created_at, Time.current).in_general %>
      <% if TimeDifference.between(comment.created_at,  Time.current).in_seconds<60 %>
          <% time_diffrence=TimeDifference.between(comment.created_at, Time.current).in_seconds %>
          <p id='comment_time'>Created About <%=time_diffrence.to_i%> seconds ago by</p>

      <% elsif TimeDifference.between(comment.created_at,  Time.current).in_minutes<60 %>
          <% time_diffrence=TimeDifference.between(comment.created_at, Time.current).in_minutes %>
           <p id='comment_time'>Created About <%=time_diffrence.to_i%> minutes ago by</p>

      <% elsif TimeDifference.between(comment.created_at,  Time.current).in_hours<24 %>
          <% time_diffrence=TimeDifference.between(comment.created_at, Time.current).in_hours %>
           <p id='comment_time'>Created About <%=time_diffrence.to_i%> hours ago by</p>

      <% elsif TimeDifference.between(comment.created_at,  Time.current).in_days<30 %>
          <% time_diffrence=TimeDifference.between(comment.created_at, Time.current).in_days %>
           <p id='comment_time'>Created About <%=time_diffrence.to_i%> days ago by</p>

      <% elsif TimeDifference.between(comment.created_at,  Time.current).in_months<12 %>
          <% time_diffrence=TimeDifference.between(comment.created_at, Time.current).in_months %>
           <p id='comment_time'>Created About <%=time_diffrence.to_i%> months ago by</p>

      <% elsif TimeDifference.between(comment.created_at,  Time.current).in_months<12 %>
          <% time_diffrence=TimeDifference.between(comment.created_at, Time.current).in_years%>
           <p id='comment_time'>Created About <%=time_diffrence.to_i%> years ago by</p>
      <%end%>

      <br>
      <p><%= comment.body %><br></p>
      <%if user_signed_in?%>
        <div class="comment-nav"><a href="#" class="comment-reply">reply</a>
          <%if current_user==comment.user%>
            <%= link_to 'delete', comment, method: :delete, data: { behavior: 'delete' } %>
          <%end%>
          <% if current_user.admin.subreddits.include? (Post.find(comment.commentable_id).subreddit)%>
            <%= link_to 'Mod Delete', comment, method: :delete, data: { behavior: 'mod_delete',comment:comment.body,user: (comment.user.email unless comment.user==nil) } %>
          <%end%>
        </div>
        <div class="reply-form">
            <%= form_for @new_comment do |f| %>
              <%= f.hidden_field :commentable_id, value: @new_comment.commentable_id %>
              <%= f.hidden_field :commentable_type, value: @new_comment.commentable_type %>
              <%= f.hidden_field :comment_id, value: comment.id %>
              <div class="field form-group">
                <%= f.text_area :body, class: 'form-control' %>
              </div>
              <div class="field form-group">
                <%= submit_tag "comment Reply", class: 'btn btn-primary' %>
              </div>
            <% end %>
        </div>
      <%else%>
      <div class="comment-nav"></div>

      <%end%>
    </div>
    <%= render partial: "comments/reply", locals: {comments: comment.children} %>
  </div>
<% end %>













<script>

$('.upvote').click(function(e) {

  var comment= $(this).attr("id")
  console.log(comment);
  $(this ).addClass( "voted" );
  $("#"+comment+".downvote").removeClass("voted");
  $.ajax({
    type: "POST",
    url: "/comment/vote",
    dataType:"json",
    data: {vote:"up",id:comment },
    success:function(data) {
      $("#"+comment+".comment_karma").text(data+" points");
      return false;
    },
    error:function(data) {
      $("#"+comment+".comment_karma").text(data+" points");
      return false;
    }
  });
});


$('.downvote').click(function(e) {
  console.log("CLICKED");
  var comment= $(this).attr("id")
  $(this ).addClass( "voted" );
  $("#"+comment+".upvote").removeClass("voted");
  $.ajax({
    type: "POST",
    url: "/comment/vote",
    dataType:"json",
    data: {vote:"down",id:comment },
    success:function(data) {
      $("#"+comment+".comment_karma").text(data+" points");
      return false;
    },
    error:function(data) {
      $("#"+comment+".comment_karma").text(data+" points");
      return false;
    }
  });
});


$('.disabled_wrapper').click(function() {
  sweetAlert("Opps!", "You Need To Sign In to Vote", "error");
});

$("[data-behavior='delete']").on("click", function(e) {
  e.preventDefault();
  e.stopPropagation();
  console.log(this);
  var link=this;
  return swal({
    title: 'Are you sure?',
    text: 'You will not be able to recover this comment!',
    type: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#DD6B55',
    confirmButtonText: 'Yes, delete it!',
    cancelButtonText: 'No, cancel!',
    closeOnConfirm: false,
    closeOnCancel: false
  }, (function(_this) {
    return function(confirmed) {
      if (confirmed) {
        $.ajax({
          url: $(_this).attr("href"),
          dataType: "JSON",
          method: "DELETE",
          success: function() {
            console.log(link);
            $(link).parents(".comment").siblings(".comment_listing_counter").fadeOut();
            $(link).parents(".comment").fadeOut();
            return swal('Deleted!', 'Your comment has been deleted.', 'success');
          }
        });
      } else {
        swal('Cancelled', 'Your comment was unharmed', 'error');
      }
    };
  })(this));
});


$("[data-behavior='mod_delete']").on("click", function(e) {
  e.preventDefault();
  e.stopPropagation();
  var link=this;
  var email=$(this).data("user");
  var title=$(this).data("comment");
  var subreddit=$(this).data("subreddit");
  return swal({
    title: 'Delete post using mod privileges?',
    text: 'You will not be able to recover this post!',
    type: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#DD6B55',
    confirmButtonText: 'Yes, delete it!',
    cancelButtonText: 'No, cancel!',
    closeOnConfirm: false,
    closeOnCancel: false
  }, (function(_this) {
    return function(confirmed) {
      if (confirmed) {

        swal({
          title: "Reason for deletion!",
          text: "What did it do wrong?:",
          type: "input",
          showCancelButton: true,
          closeOnConfirm: false,
          animation: "slide-from-top",
          inputPlaceholder: "Need Something"
        },
        function(inputValue){
          if (inputValue === false) return false;

          if (inputValue === "") {
            swal.showInputError("You need to write something!");
            return false
          }

          $.ajax({
            url: $(_this).attr("href"),
            dataType: "JSON",
            method: "DELETE",
            success: function() {
              $(link).parents(".comment").siblings(".comment_listing_counter").fadeOut();
              $(link).parents(".comment").fadeOut();
              $.ajax({
                url:"/commentmoddestroy",
                dataType: "JSON",
                method: "GET",
                data: { reason: inputValue,user:email,post:title},
                success: function() {

                }
              });
              return swal('Deleted!', 'post has been deleted.', 'success');
            }
          });
        });



      } else {
        swal('Cancelled', 'Post was unharmed', 'error');
      }
    };
  })(this));

});

</script>
